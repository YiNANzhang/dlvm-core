module ffnn

declare input f32 [4x1] @i2
declare input f32 [4x1] @i1

declare parameter f32 [8x8] @W3 = random from f32 0.0 to f32 1.0
declare parameter f32 [4x4] @W1 = random from f32 0.0 to f32 1.0
declare parameter f32 [8x1] @b3 = repeating f32 0.0
declare parameter f32 [8x1] @b2 = repeating f32 0.0
declare parameter f32 [4x1] @b1 = repeating f32 0.0
declare parameter f32 [8x8] @W2 = random from f32 0.0 to f32 1.0

declare output f32 [1x8] @o

entry:
    %v0 = tmul f32 [4x4] @W1, f32 [4x1] @i1
    %v1 = add f32 [4x1] %v0, f32 [4x1] @b1
    %h1 = sigmoid f32 [4x1] %v1
    %v2 = concat f32 [4x1] %h1, f32 [4x1] @i2 along 0
    %v3 = sub f32 1.0, f32 [8x1] %v2
    %v4 = tmul f32 [8x8] @W2, f32 %v3
    %v5 = add f32 [8x8] %v4, f32 [8x1] @b2
    %h2 = sigmoid f32 [8x8] %v5
    %v6 = tmul f32 [8x8] @W3, f32 [8x8] %h2
    %v7 = add f32 [8x8] %v6, f32 [8x1] @b3
    %v8 = softmax f32 [8x8] %v7
    %o = shapecast f32 [8x8] %v8 to [1x8]
    store f32 [1x8] %o to f32 [1x8] @o